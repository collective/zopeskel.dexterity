import unittest

\#from zope.testing import doctestunit
\#from zope.component import testing
from Testing import ZopeTestCase as ztc

#if str($zope2product) != 'True'
from Products.Five import zcml
#end if
from Products.Five import fiveconfigure
from Products.PloneTestCase import PloneTestCase as ptc
from Products.PloneTestCase.layer import PloneSite
ptc.setupPloneSite()

import ${namespace_package}.${package}


class TestCase(ptc.PloneTestCase):

    class layer(PloneSite):

        @classmethod
        def setUp(cls):
            fiveconfigure.debug_mode = True
            #if str($zope2product) == 'True'
            ztc.installPackage(${namespace_package}.${package})
            #else
            zcml.load_config('configure.zcml',
                             ${namespace_package}.${package})
            #end if
            fiveconfigure.debug_mode = False

        @classmethod
        def tearDown(cls):
            pass


def test_suite():
    return unittest.TestSuite([

        \# Unit tests
        \#doctestunit.DocFileSuite(
        \#    'README.txt', package='${namespace_package}.${package}',
        \#    setUp=testing.setUp, tearDown=testing.tearDown),

        \#doctestunit.DocTestSuite(
        \#    module='${namespace_package}.${package}.mymodule',
        \#    setUp=testing.setUp, tearDown=testing.tearDown),


        \# Integration tests that use PloneTestCase
        \#ztc.ZopeDocFileSuite(
        \#    'README.txt', package='${namespace_package}.${package}',
        \#    test_class=TestCase),

        \#ztc.FunctionalDocFileSuite(
        \#    'browser.txt', package='${namespace_package}.${package}',
        \#    test_class=TestCase),

        ])

if __name__ == '__main__':
    unittest.main(defaultTest='test_suite')
