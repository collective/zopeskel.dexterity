import doctest
import unittest

from Testing import ZopeTestCase as ztc

from Products.Five import zcml
from Products.PloneTestCase import PloneTestCase as ptc
from Products.PloneTestCase.layer import PloneSite
from Products.PloneTestCase.layer import onsetup

import ${namespace_package}.${package}

OPTION_FLAGS = doctest.NORMALIZE_WHITESPACE | \
               doctest.ELLIPSIS

ptc.setupPloneSite(products=['${namespace_package}.${package}'])


class TestCase(ptc.PloneTestCase):

    class layer(PloneSite):

        @classmethod
        def setUp(cls):
            zcml.load_config('configure.zcml',
              ${namespace_package}.${package})

        @classmethod
        def tearDown(cls):
            pass


def test_suite():
    return unittest.TestSuite([

        \# Unit tests
        \#doctestunit.DocFileSuite(
        \#    'README.txt', package='${namespace_package}.${package}',
        \#    setUp=testing.setUp, tearDown=testing.tearDown),

        \#doctestunit.DocTestSuite(
        \#    module='${namespace_package}.${package}.mymodule',
        \#    setUp=testing.setUp, tearDown=testing.tearDown),


        \# Integration tests that use PloneTestCase
        ztc.ZopeDocFileSuite(
            'INTEGRATION.txt', 
            package='${namespace_package}.${package}',
            optionflags = OPTION_FLAGS,
            test_class=TestCase),

        \#ztc.FunctionalDocFileSuite(
        \#    'BROWSER.TXT',
        \#    package='${namespace_package}.${package}',
        \#    optionflags = OPTION_FLAGS,
        \#    test_class=TestCase),

        ])

if __name__ == '__main__':
    unittest.main(defaultTest='test_suite')
